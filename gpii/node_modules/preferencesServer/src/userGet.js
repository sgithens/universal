/*!
GPII Preferences Server GET Handler

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii");

    fluid.defaults("kettle.requests.request.handler.userGet", {
        gradeNames: ["autoInit", "fluid.littleComponent"],
        invokers: {
            handle: {
                funcName: "gpii.handleUserGet",
                args: ["{that}", "{sessionManager}", "{response}", "{request}","{requestProxy}", "{request}.req.params.token", "{preferencesServer}.userSource"],
                dynamic: true
            }
        }
    });

    gpii.handleUserGet = function (that, sessionManager, res, req, requestProxy, token, userSource) {
        console.log("Before: " + req.req.session.curUsername);
        if (!req.req.session.curUsername) {
            console.log("Setting curuser to " + token);
            req.req.session.curUsername = token;
        }
        console.log("After: " + req.req.session.curUsername);
        req.res.redirect("http://githens.org");
        return;
        debugger;
        userSource.get({
            token: token
        }, function (preferences) {
            gpii.preferencesServer.handlePreferences(requestProxy, token,
                preferences);
        });
    };

})();
